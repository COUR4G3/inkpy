[project]
name = "inkpy"
description = """This is a Python port of inkle's [ink](https://github.com/inkle/ink), a scripting language for \
writing interactive narrative.
"""

readme = "README.md"
license = { text = "MIT" }
authors = [{name = "Michael de Villiers", email = "michael@devilears.co.za"},]
maintainers = [{name = "Michael de Villiers", email = "michael@devilears.co.za"},]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Games/Entertainment :: Multi-User Dungeons (MUD)",
    "Topic :: Games/Entertainment :: Role-Playing",
]
dynamic = ["version"]
requires-python = ">= 3.9"
dependencies = []

[project.scripts]
inkpy = "inkpy.cli:main"
"inklecate.py" = "inkpy.compiler.cli:main"

[project.urls]
Demo = "https://inkpy.github.io/"
Homepage = "https://github.com/COUR4G3/inkpy/"
Documentation = "https://inkpy.readthedocs.io/"
Changes = "https://inkpy.readthedocs.io/en/latest/changelog.html"
"Source Code" = "https://github.com/COUR4G3/inkpy/"
Examples = "https://github.com/COUR4G3/inkpy/tree/master/examples"
"Issue Tracker" = "https://github.com/COUR4G3/inkpy/issues/"

[build-system]
requires = [
    "setuptools>=64.0",
    "setuptools_scm[toml]>=6.2",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.bandit]
exclude_dirs = [".github", "tests"]
skips = ["B101"]

[tool.black]
force-exclude = '''
(
  /venv/
)
'''
line-length = 88
target-version = ['py39']

[tool.coverage.run]
source = ["inkpy"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: nocover",

    # Don't complain about type checking code not run
    "if TYPE_CHECKING:",
    "if t.TYPE_CHECKING:",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if settings\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    "*/__main__.py",
    "*/_version.py",
]

[tool.flake8]
ignore = ['B010', 'E203', 'W503']
max-line-length = 88
count = true

[tool.isort]
profile = 'black'
line_length = 88
lines_between_types = 1
multi_line_output = 3
combine_as_imports = true
known_first_party = ['druglord3k', 'tests']

[tool.mypy]
python_version = '3.9'

[[tool.mypy.overrides]]
module = [

]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov=inkpy/ --cov-report=term-missing:skip-covered --import-mode=importlib"
markers = [
    "slow: tests that are slow",
    "integration: integration tests that require external tools",
]

[tool.setuptools.packages.find]
include = ["inkpy*"]

[tool.setuptools_scm]
write_to = "inkpy/_version.py"

[tool.towncrier]
package = "inkpy"
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/template.md"
title_format = "## [{version}](https://github.com/COUR4G3/inkpy/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/COUR4G3/inkpy/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
